name: Expo Example - iOS E2E Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'examples/expo-example/**'
      - 'packages/**'
      - '.github/workflows/e2e-expo-example-ios.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'examples/expo-example/**'
      - 'packages/**'
      - '.github/workflows/e2e-expo-example-ios.yml'
  workflow_dispatch:

jobs:
  ios-e2e:
    name: Run Expo Example iOS E2E Tests
    runs-on: macos-latest
    timeout-minutes: 60
    env:
      EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
    steps:
      - name: üèó Checkout repository
        uses: actions/checkout@v4

      - name: üåø Setup Node & Install Dependencies
        uses: actions/setup-node@v4
        with:
          node-version-file: 'examples/expo-example/.nvmrc'
          cache: 'yarn'
      - run: yarn install --immutable

      - name: üì¶ Install Tools
        run: |
          npm install -g eas-cli
          curl -Ls "https://get.maestro.mobile.dev" | bash
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      - name: üì± Setup iOS Simulator
        run: |
          DEVICE_NAME="iPhone 16 Pro"
          xcrun simctl boot "$(xcrun simctl create "$DEVICE_NAME" com.apple.CoreSimulator.SimDeviceType.iPhone-16-Pro)" || true
          xcrun simctl list devices booted

      - name: üõ†Ô∏è Build & Install App
        working-directory: examples/expo-example
        run: |
          # Build and capture the output path
          BUILD_OUTPUT=$(eas build --profile testing -p ios --local --non-interactive)
          BUILD_PATH=$(echo "$BUILD_OUTPUT" | grep -o '/.*\.tar\.gz')
          
          echo "üì¶ Extracting from $BUILD_PATH..."
          tar -xzf "$BUILD_PATH"
          
          APP_PATH=$(find . -name "*.app" -type d)
          echo "üì± Installing $APP_PATH..."
          xcrun simctl install booted "$APP_PATH"

      - name: üß™ Run Maestro tests
        working-directory: examples/expo-example
        run: yarn run test:e2e:ios